x-airflow-common: &airflow-common
  build: .                  
  image: ${AIRFLOW_IMAGE_NAME:-extending_airflow:latest}
  environment: &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__SCHEDULER__MIN_FILE_PROCESS_INTERVAL: 10
    POSTGRES_URL: postgresql+psycopg2://airflow:airflow@postgres/airflow
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./ETL:/opt/airflow/ETL       
    - ./data:/opt/airflow/data       
  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}"
  depends_on:
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - pgdata:/var/lib/postgresql/data   
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 5s
      timeout: 5s
      retries: 5

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command: -c "airflow db upgrade && airflow users create \
      --role Admin --username admin --password admin --firstname Air --lastname Flow --email admin@example.com"

  scheduler:
    <<: *airflow-common
    command: scheduler
    restart: unless-stopped
    depends_on:
      - airflow-init

  webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8082:8080"   
    restart: unless-stopped
    depends_on:
      - scheduler

volumes:
  pgdata:
